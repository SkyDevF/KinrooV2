import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'login_screen.dart';
import 'register_screen.dart';
import 'input_birthday_screen.dart';

class WelcomeScreen extends StatelessWidget {
  const WelcomeScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        children: [
          // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏†‡∏≤‡∏û‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
          Positioned.fill(
            child: Image.asset('assets/icon/welcome.png', fit: BoxFit.cover),
          ),

          // ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
          Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                SizedBox(height: 350), // ‚úÖ ‡πÄ‡∏ß‡πâ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÉ‡∏´‡πâ‡∏û‡∏≠‡∏î‡∏µ‡∏Å‡∏±‡∏ö UI

                _buildButton(context, "‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô", Colors.black, LoginScreen()),
                SizedBox(height: 15),
                _buildButton(
                  context,
                  "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ",
                  Colors.white,
                  RegisterScreen(),
                  textColor: Colors.black,
                ),
                SizedBox(height: 25),

                _buildTrialAccount(context),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildButton(
    BuildContext context,
    String label,
    Color color,
    Widget screen, {
    Color textColor = Colors.white,
  }) {
    return SizedBox(
      width: 350,
      height: 60,
      child: ElevatedButton(
        style: ElevatedButton.styleFrom(
          backgroundColor: color,
          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),
        ),
        onPressed: () =>
            Navigator.push(context, MaterialPageRoute(builder: (_) => screen)),
        child: Text(label, style: TextStyle(fontSize: 18, color: textColor)),
      ),
    );
  }

  Widget _buildTrialAccount(BuildContext context) {
    return GestureDetector(
      onTap: () => _signInAnonymously(context),
      child: Column(
        children: [
          Text(
            "‡∏Å‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏î‡∏•‡∏≠‡∏á",
            style: TextStyle(fontSize: 16, color: Colors.white),
          ),
          SizedBox(height: 3),
          Container(width: 200, height: 2, color: Colors.white),
        ],
      ),
    );
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡∏ï‡∏ô
  Future<void> _signInAnonymously(BuildContext context) async {
    try {
      print("üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡∏ï‡∏ô...");

      // ‡πÅ‡∏™‡∏î‡∏á loading
      showDialog(
        context: context,
        barrierDismissible: false,
        builder: (context) =>
            Center(child: CircularProgressIndicator(color: Colors.white)),
      );

      // ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡∏ï‡∏ô
      UserCredential userCredential = await FirebaseAuth.instance
          .signInAnonymously();
      print("‚úÖ ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${userCredential.user?.uid}");

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ context ‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (!context.mounted) return;

      // ‡∏õ‡∏¥‡∏î loading dialog
      Navigator.pop(context);

      // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î
      Navigator.push(
        context,
        MaterialPageRoute(builder: (_) => InputBirthdayScreen()),
      );
    } catch (e) {
      print("‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô: $e");

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ context ‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (!context.mounted) return;

      // ‡∏õ‡∏¥‡∏î loading dialog
      Navigator.pop(context);

      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏∂‡πâ‡∏ô
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${e.toString()}"),
          backgroundColor: Colors.red,
          duration: Duration(seconds: 5),
        ),
      );
    }
  }
}
